<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context-4.1.xsd">

    <!-- 会话ID生成器 -->
    <!--<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>-->

    <!-- 会话Cookie模板 -->
    <!--<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">-->
        <!--<constructor-arg value="sid"/>-->
        <!--<property name="httpOnly" value="true"/>-->
        <!--<property name="maxAge" value="180000"/>-->
    <!--</bean>-->

    <!-- 会话DAO -->
    <!--<bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">-->
        <!--<property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>-->
        <!--<property name="sessionIdGenerator" ref="sessionIdGenerator"/>-->
    <!--</bean>-->

    <!-- 会话验证调度器 -->
    <!--<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">-->
        <!--<property name="sessionValidationInterval" value="1800000"/>-->
        <!--<property name="sessionManager" ref="sessionManager"/>-->
    <!--</bean>-->

    <!-- 会话管理器 -->
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
        <!--<property name="globalSessionTimeout" value="1800000"/>-->
        <!--<property name="deleteInvalidSessions" value="true"/>-->
        <!--&lt;!&ndash;<property name="sessionValidationSchedulerEnabled" value="true"/>&ndash;&gt;-->
        <!--&lt;!&ndash;<property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>&ndash;&gt;-->
        <!--<property name="sessionDAO" ref="sessionDAO"/>-->
        <!--<property name="sessionIdCookieEnabled" value="true"/>-->
        <!--<property name="sessionIdCookie" ref="sessionIdCookie"/>-->
    <!--</bean>-->

    <!--安全管理器-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="userRealm" />
            </list>
        </property>
        <!--<property name="sessionManager" ref="sessionManager"/>-->
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login"/>
    </bean>

    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/login" />
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="successUrl" value="/" />
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter" />
            </map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /static/**=anon
                /index=anon
                /unauthorized=anon
                /login=authc
                /logout=logout
                /**=authc
            </value>
        </property>
    </bean>

    <!-- Shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>